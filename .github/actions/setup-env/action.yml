name: 'Setup Environment'
description: 'Sets up Node.js environment with npm registry configuration'

inputs:
  npm-token:
    description: 'Token for npm registry authentication'
    required: true
  setup-git-identity:
    description: 'Whether to setup git identity'
    required: false
    default: 'false'
  git-user-name:
    description: 'Git user name to configure'
    required: false
    default: 'github-actions[bot]'
  git-user-email:
    description: 'Git user email to configure'
    required: false
    default: 'github-actions[bot]@users.noreply.github.com'

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        registry-url: 'https://npm.pkg.github.com'
        scope: '@acamae'

    - name: Install latest npm
      shell: bash
      run: npm install -g npm@latest

    - name: Create .npmrc file
      shell: bash
      run: |
        echo "@acamae:registry=https://npm.pkg.github.com" > .npmrc
        echo "//npm.pkg.github.com/:_authToken=${NPM_TOKEN}" >> .npmrc
        cat .npmrc
      env:
        NPM_TOKEN: ${{ inputs.npm-token }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          **/node_modules
          ~/.npm
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json', '**/lerna.json') }}
        restore-keys: |
          ${{ runner.os }}-modules-

    - name: Install dependencies
      shell: bash
      run: |
        echo "ðŸ“¦ Installing dependencies..."
        npm ci --prefer-offline || {
          echo "ðŸ”„ Retry without cache..."
          rm -rf node_modules
          npm ci
        }

    - name: Setup git identity
      if: inputs.setup-git-identity == 'true'
      shell: bash
      run: |
        git config --global user.name "${{ inputs.git-user-name }}"
        git config --global user.email "${{ inputs.git-user-email }}"
