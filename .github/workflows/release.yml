# @description: Este workflow se encarga de la publicación de paquetes en GitHub Packages
# @triggers: Push a la rama release
# @permissions: read-only para contenido y paquetes
name: Release

# Ensure only one release runs at a time
concurrency:
  group: 'release'
  cancel-in-progress: false

on:
  push:
    branches:
      - release
    paths-ignore:
      - 'CHANGELOG.md'
      - 'package.json'
      - 'lerna.json'
      - 'package-lock.json'

jobs:
  version-and-publish:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    environment: development
    permissions:
      contents: write
      packages: write
      pull-requests: write
      checks: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Verify branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/release" ]]; then
            echo "❌ This workflow should only run on the release branch"
            exit 1
          fi

      - name: Validate commit format
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"

          # Ignorar commits de merge
          if [[ "$COMMIT_MSG" =~ ^Merge ]]; then
            echo "✅ Merge commit detected, skipping validation"
            exit 0
          fi

          # Ignorar commits de release de Lerna
          if [[ "$COMMIT_MSG" =~ ^chore\(release\): ]]; then
            echo "✅ Release commit detected, skipping validation"
            exit 0
          fi

          # Validar formato convencional
          if ! [[ "$COMMIT_MSG" =~ ^(feat|fix|chore|docs|style|refactor|perf|test|build|ci|revert)(\(.+\))?: ]]; then
            echo "❌ Commit message does not follow Conventional Commits"
            echo "Message: $COMMIT_MSG"
            exit 1
          fi

          echo "✅ Valid conventional commit format"

      - name: Install GNU coreutils (for sha256sum)
        if: runner.os == 'macOS'
        run: brew install coreutils

      - name: Setup environment
        uses: ./.github/actions/setup-env
        with:
          npm-token: ${{ secrets.NODE_AUTH_TOKEN || secrets.GITHUB_TOKEN }}
          setup-git-identity: true

      - name: Version packages
        if: ${{ !startsWith(github.event.head_commit.message, 'chore(release):') }}
        run: npx lerna version --conventional-commits --yes --no-push

      - name: Push tags
        run: git push --follow-tags

      - name: Lerna publish
        run: npx lerna publish from-package --yes
