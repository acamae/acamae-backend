---
description:
globs: *.test.js,*.test.jsx
alwaysApply: false
---
**Testing Guidelines**

* **Test Structure**:
  - Use Jest as main framework
  - Organize tests by layer (unit, integration, e2e)
  - Keep tests independent
  - Clean database between tests
  - Use factories for test data

* **API Testing**:
  - Use supertest for API tests
  - Verify response codes
  - Validate response structure
  - Test error cases
  - Verify security headers
  - Test rate limiting

* **Database Testing**:
  - Use test database
  - Clean data between tests
  - Verify transactions
  - Test constraints
  - Validate indexes
  - Test migrations

* **Security Testing**:
  - Test input validation
  - Verify sanitization
  - Test authentication
  - Validate authorization
  - Test rate limiting
  - Verify security headers

* **Performance Testing**:
  - Use autocannon for load testing
  - Measure response times
  - Verify memory leaks
  - Test under load
  - Monitor resources
  - Validate timeouts

* **Mocking**:
  - Mock external services
  - Simulate network errors
  - Mock database
  - Simulate timeouts
  - Mock events
  - Simulate load

* **Test Coverage**:
  - Maintain 80%+ coverage
  - Focus on business logic
  - Cover error cases
  - Test edge cases
  - Validate integrations
  - Cover security
